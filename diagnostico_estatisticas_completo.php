<?php
// diagnostico_estatisticas_completo.php - Diagn√≥stico completo das estat√≠sticas

session_start();
require_once 'includes/db_connect.php';

echo "<h2>üîç DIAGN√ìSTICO COMPLETO DAS ESTAT√çSTICAS</h2>";

// Verificar se o usu√°rio est√° logado
if (!isset($_SESSION['user_id'])) {
    echo "‚ùå Usu√°rio n√£o est√° logado. Fa√ßa login primeiro.<br>";
    echo "<a href='index.php' class='btn btn-primary'>Fazer Login</a><br><br>";
    exit();
}

echo "‚úÖ Usu√°rio logado: ID " . $_SESSION['user_id'] . "<br><br>";

// Fun√ß√£o para testar API espec√≠fica
function testarAPICompleta($nome, $arquivo) {
    echo "<h3>üîç Teste: $nome</h3>";
    echo "Arquivo: $arquivo<br>";
    
    if (!file_exists($arquivo)) {
        echo "‚ùå Arquivo n√£o encontrado<br>";
        return false;
    }
    
    echo "‚úÖ Arquivo existe<br>";
    
    // Capturar output
    ob_start();
    
    try {
        // Simular execu√ß√£o direta
        $_SERVER['REQUEST_METHOD'] = 'GET';
        $_SERVER['HTTP_HOST'] = $_SERVER['HTTP_HOST'];
        $_SERVER['REQUEST_URI'] = '/' . $arquivo;
        
        include $arquivo;
        $output = ob_get_clean();
        
        if (!empty($output)) {
            echo "‚úÖ Output capturado (tamanho: " . strlen($output) . " bytes)<br>";
            
            // Verificar se √© JSON v√°lido
            $data = json_decode($output, true);
            if ($data !== null) {
                echo "‚úÖ JSON v√°lido<br>";
                
                if (isset($data['success']) && $data['success'] === true) {
                    echo "‚úÖ API funcionando corretamente<br>";
                    
                    // Mostrar dados espec√≠ficos
                    if (isset($data['tarefas'])) {
                        echo "üìä Tarefas encontradas: " . count($data['tarefas']) . "<br>";
                    }
                    if (isset($data['total'])) {
                        echo "üìä Total: " . $data['total'] . "<br>";
                    }
                    if (isset($data['labels']) && isset($data['tarefas'])) {
                        echo "üìä Gr√°fico - Labels: " . implode(', ', $data['labels']) . "<br>";
                        echo "üìä Gr√°fico - Dados: " . implode(', ', $data['tarefas']) . "<br>";
                    }
                    
                    return true;
                } else {
                    echo "‚ùå API retornou erro: " . ($data['message'] ?? 'Erro desconhecido') . "<br>";
                }
            } else {
                echo "‚ùå JSON inv√°lido: " . json_last_error_msg() . "<br>";
                echo "Output: " . htmlspecialchars($output) . "<br>";
            }
        } else {
            echo "‚ùå Nenhum output capturado<br>";
        }
    } catch (Exception $e) {
        ob_end_clean();
        echo "‚ùå Erro: " . $e->getMessage() . "<br>";
    }
    
    return false;
}

// Testar APIs originais
echo "<h2>üìä TESTE DAS APIs ORIGINAIS</h2>";

$apis_originais = [
    'buscar_tarefas_hoje.php' => 'Tarefas de Hoje (Original)',
    'buscar_distribuicao_prioridade.php' => 'Distribui√ß√£o por Prioridade (Original)',
    'buscar_produtividade_7_dias.php' => 'Produtividade 7 Dias (Original)'
];

$resultados_originais = [];

foreach ($apis_originais as $arquivo => $nome) {
    $resultados_originais[$arquivo] = testarAPICompleta($nome, $arquivo);
    echo "<hr>";
}

// Testar APIs alternativas
echo "<h2>üìä TESTE DAS APIs ALTERNATIVAS</h2>";

$apis_alternativas = [
    'api_tarefas_hoje.php' => 'Tarefas de Hoje (Alternativa)',
    'api_distribuicao_prioridade.php' => 'Distribui√ß√£o por Prioridade (Alternativa)',
    'api_produtividade_7_dias.php' => 'Produtividade 7 Dias (Alternativa)'
];

$resultados_alternativas = [];

foreach ($apis_alternativas as $arquivo => $nome) {
    $resultados_alternativas[$arquivo] = testarAPICompleta($nome, $arquivo);
    echo "<hr>";
}

// Resumo dos resultados
echo "<h2>üìã RESUMO DOS RESULTADOS</h2>";

echo "<h3>APIs Originais:</h3>";
$sucessos_originais = 0;
foreach ($resultados_originais as $arquivo => $sucesso) {
    if ($sucesso) {
        echo "‚úÖ $arquivo: FUNCIONANDO<br>";
        $sucessos_originais++;
    } else {
        echo "‚ùå $arquivo: COM PROBLEMAS<br>";
    }
}

echo "<h3>APIs Alternativas:</h3>";
$sucessos_alternativas = 0;
foreach ($resultados_alternativas as $arquivo => $sucesso) {
    if ($sucesso) {
        echo "‚úÖ $arquivo: FUNCIONANDO<br>";
        $sucessos_alternativas++;
    } else {
        echo "‚ùå $arquivo: COM PROBLEMAS<br>";
    }
}

echo "<br><strong>APIs Originais: $sucessos_originais/" . count($resultados_originais) . " funcionando</strong><br>";
echo "<strong>APIs Alternativas: $sucessos_alternativas/" . count($resultados_alternativas) . " funcionando</strong><br>";

// Verifica√ß√µes adicionais
echo "<h3>üîç VERIFICA√á√ïES ADICIONAIS</h3>";

// Verificar se as tabelas existem
try {
    $stmt = $pdo->query("SHOW TABLES LIKE 'tarefas'");
    if ($stmt->fetch()) {
        echo "‚úÖ Tabela 'tarefas' existe<br>";
        
        // Verificar se h√° dados
        $stmt = $pdo->prepare("SELECT COUNT(*) as total FROM tarefas WHERE id_usuario = ?");
        $stmt->execute([$_SESSION['user_id']]);
        $total = $stmt->fetch()['total'];
        echo "üìä Total de tarefas: $total<br>";
        
        if ($total == 0) {
            echo "‚ö†Ô∏è Nenhuma tarefa encontrada. Isso pode causar problemas nas APIs.<br>";
        }
        
        // Verificar tarefas de hoje
        $stmt = $pdo->prepare("
            SELECT COUNT(*) as total 
            FROM tarefas 
            WHERE id_usuario = ? 
            AND (
                DATE(data_limite) = CURDATE() 
                OR DATE(data_criacao) = CURDATE()
            )
        ");
        $stmt->execute([$_SESSION['user_id']]);
        $hoje = $stmt->fetch()['total'];
        echo "üìÖ Tarefas de hoje: $hoje<br>";
        
        // Verificar tarefas conclu√≠das dos √∫ltimos 7 dias
        $stmt = $pdo->prepare("
            SELECT COUNT(*) as total 
            FROM tarefas 
            WHERE id_usuario = ? 
            AND status = 'concluida'
            AND data_conclusao >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)
        ");
        $stmt->execute([$_SESSION['user_id']]);
        $concluidas_7_dias = $stmt->fetch()['total'];
        echo "üìä Tarefas conclu√≠das (7 dias): $concluidas_7_dias<br>";
        
    } else {
        echo "‚ùå Tabela 'tarefas' n√£o existe<br>";
    }
} catch (Exception $e) {
    echo "‚ùå Erro ao verificar banco: " . $e->getMessage() . "<br>";
}

// Verificar configura√ß√£o PHP
echo "<h3>‚öôÔ∏è CONFIGURA√á√ÉO PHP</h3>";
echo "Vers√£o PHP: " . phpversion() . "<br>";
echo "JSON support: " . (function_exists('json_encode') ? 'Sim' : 'N√£o') . "<br>";
echo "PDO support: " . (class_exists('PDO') ? 'Sim' : 'N√£o') . "<br>";
echo "Session support: " . (function_exists('session_start') ? 'Sim' : 'N√£o') . "<br>";

// Recomenda√ß√µes
echo "<h3>üí° RECOMENDA√á√ïES</h3>";

if ($sucessos_alternativas > $sucessos_originais) {
    echo "<div style='background: #d4edda; padding: 1rem; border-radius: 8px; margin: 1rem 0;'>";
    echo "<h4>‚úÖ Use as APIs Alternativas</h4>";
    echo "<p>As APIs alternativas est√£o funcionando melhor que as originais. Execute:</p>";
    echo "<ol>";
    echo "<li><a href='atualizar_javascript_estatisticas.php'>Atualizar JavaScript</a></li>";
    echo "<li><a href='tarefas.php'>Testar Modal de Estat√≠sticas</a></li>";
    echo "</ol>";
    echo "</div>";
} elseif ($sucessos_originais > 0) {
    echo "<div style='background: #fff3cd; padding: 1rem; border-radius: 8px; margin: 1rem 0;'>";
    echo "<h4>‚ö†Ô∏è APIs Originais Funcionando</h4>";
    echo "<p>As APIs originais est√£o funcionando. O problema pode estar no JavaScript ou no modal.</p>";
    echo "<ol>";
    echo "<li>Verifique o console do navegador (F12)</li>";
    echo "<li>Teste o modal de estat√≠sticas</li>";
    echo "<li>Verifique se h√° erros JavaScript</li>";
    echo "</ol>";
    echo "</div>";
} else {
    echo "<div style='background: #f8d7da; padding: 1rem; border-radius: 8px; margin: 1rem 0;'>";
    echo "<h4>‚ùå Problemas Identificados</h4>";
    echo "<p>Nenhuma API est√° funcionando. Poss√≠veis causas:</p>";
    echo "<ul>";
    echo "<li>Problemas de conex√£o com banco de dados</li>";
    echo "<li>Usu√°rio n√£o logado corretamente</li>";
    echo "<li>Arquivos corrompidos ou com erros</li>";
    echo "<li>Problemas de permiss√£o</li>";
    echo "</ul>";
    echo "</div>";
}

echo "<hr>";
echo "<p><strong>‚úÖ Diagn√≥stico conclu√≠do!</strong> Use as recomenda√ß√µes acima para resolver os problemas.</p>";
?>
