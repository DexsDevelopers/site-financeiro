<?php
// teste_automacao.php - Teste do sistema de automa√ß√£o
echo "<h1>üß™ Teste do Sistema de Automa√ß√£o</h1>";
echo "<hr>";

// 1. Verificar arquivos de configura√ß√£o
echo "<h2>1. Verifica√ß√£o dos Arquivos de Configura√ß√£o</h2>";

$configFiles = [
    '.cursor/automation.json' => 'Configura√ß√£o de automa√ß√£o',
    '.cursor/settings.json' => 'Configura√ß√µes do Cursor',
    '.cursor/deploy.ps1' => 'Script de deploy principal',
    '.cursor/auto-deploy.ps1' => 'Script de deploy autom√°tico'
];

foreach ($configFiles as $file => $description) {
    if (file_exists($file)) {
        echo "‚úÖ <strong>$description</strong> ($file) - <span style='color: green;'>EXISTE</span><br>";
        
        // Verificar se o arquivo n√£o est√° vazio
        $content = file_get_contents($file);
        if (strlen($content) > 0) {
            echo "&nbsp;&nbsp;&nbsp;&nbsp;üìÑ Arquivo n√£o est√° vazio (" . strlen($content) . " bytes)<br>";
        } else {
            echo "&nbsp;&nbsp;&nbsp;&nbsp;‚ö†Ô∏è Arquivo est√° vazio<br>";
        }
    } else {
        echo "‚ùå <strong>$description</strong> ($file) - <span style='color: red;'>N√ÉO EXISTE</span><br>";
    }
}

// 2. Verificar diret√≥rio de logs
echo "<br><h2>2. Verifica√ß√£o do Sistema de Logs</h2>";
if (!file_exists('logs')) {
    echo "üìÅ Criando diret√≥rio de logs...<br>";
    mkdir('logs', 0755, true);
    echo "‚úÖ Diret√≥rio 'logs' criado<br>";
} else {
    echo "‚úÖ Diret√≥rio 'logs' existe<br>";
}

// 3. Testar permiss√µes do PowerShell
echo "<br><h2>3. Teste de Permiss√µes do PowerShell</h2>";
$psCommand = 'Get-ExecutionPolicy';
$output = shell_exec("powershell -Command \"$psCommand\" 2>&1");
echo "Pol√≠tica de execu√ß√£o atual: <strong>" . trim($output) . "</strong><br>";

if (strpos($output, 'Restricted') !== false) {
    echo "‚ö†Ô∏è <span style='color: orange;'>Pol√≠tica restritiva detectada. Execute: Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</span><br>";
} else {
    echo "‚úÖ <span style='color: green;'>Pol√≠tica de execu√ß√£o adequada</span><br>";
}

// 4. Verificar configura√ß√£o do Git
echo "<br><h2>4. Verifica√ß√£o da Configura√ß√£o do Git</h2>";
$gitUser = shell_exec("git config user.name 2>&1");
$gitEmail = shell_exec("git config user.email 2>&1");
$gitRemote = shell_exec("git remote -v 2>&1");

echo "Usu√°rio Git: <strong>" . trim($gitUser) . "</strong><br>";
echo "Email Git: <strong>" . trim($gitEmail) . "</strong><br>";
echo "Reposit√≥rio remoto:<br>";
echo "<pre>" . htmlspecialchars($gitRemote) . "</pre>";

// 5. Simular teste de automa√ß√£o
echo "<br><h2>5. Simula√ß√£o de Teste de Automa√ß√£o</h2>";
echo "Para testar a automa√ß√£o manualmente, execute:<br>";
echo "<code>powershell -ExecutionPolicy Bypass -File \".\\.cursor\\deploy.ps1\"</code><br><br>";

echo "Ou para o script de automa√ß√£o:<br>";
echo "<code>powershell -ExecutionPolicy Bypass -File \".\\.cursor\\auto-deploy.ps1\"</code><br><br>";

// 6. Verificar se o Cursor AI est√° configurado
echo "<br><h2>6. Instru√ß√µes para Configurar no Cursor AI</h2>";
echo "<div style='background: #f8f9fa; padding: 15px; border-radius: 5px; border-left: 4px solid #007bff;'>";
echo "<h4>üìã Passos para Ativar a Automa√ß√£o:</h4>";
echo "<ol>";
echo "<li><strong>Abra o Command Palette:</strong> Ctrl + Shift + P</li>";
echo "<li><strong>Digite:</strong> <code>Cursor: Create Automation</code></li>";
echo "<li><strong>Configure:</strong>";
echo "<ul>";
echo "<li>Trigger: <code>On Git Commit</code></li>";
echo "<li>Command: <code>powershell -ExecutionPolicy Bypass -File \".\\.cursor\\deploy.ps1\"</code></li>";
echo "<li>Branch: <code>main</code></li>";
echo "</ul>";
echo "</li>";
echo "<li><strong>Salve a configura√ß√£o</strong></li>";
echo "</ol>";
echo "</div>";

// 7. Status atual do sistema
echo "<br><h2>7. Status do Sistema</h2>";
$currentTime = date('Y-m-d H:i:s');
$lastCommit = shell_exec("git log -1 --format=%cd 2>&1");
$branch = shell_exec("git branch --show-current 2>&1");

echo "‚è∞ Hora atual: <strong>$currentTime</strong><br>";
echo "üìù √öltimo commit: <strong>" . trim($lastCommit) . "</strong><br>";
echo "üåø Branch atual: <strong>" . trim($branch) . "</strong><br>";

echo "<br><h3>üéØ Conclus√£o:</h3>";
echo "Se todos os arquivos estiverem ‚úÖ e as permiss√µes estiverem corretas, a automa√ß√£o deve funcionar automaticamente quando voc√™ fizer commits no Git.<br>";
echo "A automa√ß√£o ir√°:";
echo "<ul>";
echo "<li>Detectar mudan√ßas automaticamente</li>";
echo "<li>Fazer commit das mudan√ßas</li>";
echo "<li>Enviar para o GitHub</li>";
echo "<li>Aguardar o deploy na Hostinger</li>";
echo "<li>Notificar sobre o sucesso/erro</li>";
echo "</ul>";
?>
